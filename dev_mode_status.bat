@echo off
echo ===============================================
echo     üöÄ DEVELOPMENT MODE - MUCH BETTER APPROACH!
echo ===============================================
echo.

cd /d "c:\Users\drraj\OneDrive\Documents\Beta\R22"

echo üéâ SMART SOLUTION IN PROGRESS:
echo.
echo Instead of fighting with the built app.exe that keeps having issues,
echo I'm now running the app in DEVELOPMENT MODE using:
echo.
echo    npm run tauri dev
echo.
echo This approach is MUCH more reliable because:
echo ‚úÖ Uses live Next.js dev server (localhost:3000)
echo ‚úÖ No static export issues
echo ‚úÖ Real-time code changes
echo ‚úÖ Better debugging capabilities
echo ‚úÖ Direct source code execution (no build cache issues)
echo.

echo üîç Current Status:
echo.

echo Backend Status:
netstat -ano | findstr :8001
if errorlevel 1 (
    echo ‚ùå Backend not running
) else (
    echo ‚úÖ Backend running on port 8001
)

echo.
echo Frontend Dev Server Status:
netstat -ano | findstr :3000
if errorlevel 1 (
    echo ‚è≥ Next.js dev server starting...
) else (
    echo ‚úÖ Next.js dev server running on port 3000
)

echo.
echo Tauri Compilation Status:
tasklist | findstr cargo
if errorlevel 1 (
    echo ‚è≥ Tauri compilation may be complete or not started
) else (
    echo üî® Tauri is compiling (this takes 2-3 minutes first time)
)

echo.
echo ===============================================
echo üí° WHY THIS WILL WORK:
echo ===============================================
echo.
echo The development mode bypasses all the issues we had with:
echo ‚Ä¢ Static export configuration
echo ‚Ä¢ Build cache problems  
echo ‚Ä¢ API URL detection issues
echo ‚Ä¢ CORS configuration problems
echo.
echo In dev mode, the app runs directly from source code
echo with hot reload and real-time updates!
echo.
echo ‚è∞ Expected Timeline:
echo ‚Ä¢ First time: 2-3 minutes to compile Tauri
echo ‚Ä¢ After that: 10-15 seconds to start
echo.
echo üéØ When the app window opens, you should see:
echo ‚Ä¢ "Backend is ready" immediately
echo ‚Ä¢ No more "(1/15)" spinning
echo ‚Ä¢ Full functionality working
echo.
pause